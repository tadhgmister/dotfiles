diff /gnu/store/8ibr3xwn9dl63n48zkp777jhmzmzrn2w-dwm-6.4-checkout/config.def.h /home/tadhg/src/dwm/config.def.h
2c2
< 
---
> #include <X11/XF86keysym.h>
6c6
< static const int showbar            = 1;        /* 0 means no bar */
---
> static const int showbar            = 2;        /* 0 means no bar */
8,9c8,9
< static const char font[]            = "monospace 10";
< static const char dmenufont[]       = "monospace:size=10";
---
> static const char font[]            = "monospace 16";
> static const char dmenufont[]       = "monospace:size=16";
38c38
< static const int lockfullscreen = 1; /* 1 will force focus on the fullscreen window */
---
> static const int lockfullscreen = 0; /* 1 will force focus on the fullscreen window */
48c48
< #define MODKEY Mod1Mask
---
> #define MODKEY Mod4Mask
54c54
< #define HOLDKEY 0xffe9 // 0 - disable; 0xffe9 - Mod1Mask; 0xffeb - Mod4Mask
---
> #define HOLDKEY 0xffeb // 0 - disable; 0xffe9 - Mod1Mask; 0xffeb - Mod4Mask
60,61d59
< static const char *dmenucmd[] = { "dmenu_run", "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
< static const char *termcmd[]  = { "st", NULL };
63,65c61,67
< static const char *termcmd2[] = { "xterm", NULL };
< static const char *browsercmd[] = {"librewolf", NULL};
< static const char *keepassxccmd[] = {"keepassxc", NULL};
---
> static const char *dmenucmd[] = { "dmenuwithbangs", "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
> static const char *termcmd[]  = { "alacritty", NULL };
> static const char *brctlcmd[] = { "brctl", "10000", NULL };
> 
> static const char *chatclientcmd[] = { "dino", NULL };
> static const char *browsercmd[] = {"brave", NULL};
> static const char *emailclientcmd[] = {"icedove", NULL};
69,72c71,74
< 	{.cmd = browsercmd, .tags = 1 << 0 },
< 	{.cmd = keepassxccmd, .tags = 1 << 4 },
< 	{.cmd = emacscmd, .tags = 1 << 7 },
< 	{.cmd = termcmd2, .tags = 1 << 8 },
---
> 	{.cmd = chatclientcmd, .tags = 1 << 1 },
> 	{.cmd = browsercmd, .tags = 1 << 2 },
> 	{.cmd = emailclientcmd, .tags = 1 << 5 },
> 	{.cmd = emacscmd, .tags = 1 << 3 },
75a78
> 
78,84c81,102
< 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
< 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
< 	{ MODKEY,                       XK_b,      togglebar,      {0} },
< 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
< 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
< 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
< 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
---
> 	{ MODKEY,                       XK_space,             spawn, {.v = dmenucmd } },
> 	{ MODKEY|ShiftMask,             XK_space,             spawn, {.v = termcmd } },
> 	{ 0,                      XF86XK_AudioPlay,           spawn, SHCMD("xclip -o | festival --tts") },
> 	
> 	{ 0,                      XF86XK_MonBrightnessUp,     spawn, SHCMD("brctl 5000") },
> 	{ 0,                      XK_F8,                      spawn, SHCMD("brctl 5000") },
> 	{ MODKEY,                 XF86XK_MonBrightnessUp,     spawn, SHCMD("brctl 10000") },
> 	{ MODKEY,                 XK_F8,                      spawn, SHCMD("brctl 10000") },
> 	{ 0,                      XF86XK_MonBrightnessDown,   spawn, SHCMD("brctl 1") },
> 	{ 0,                      XK_F7,                      spawn, SHCMD("brctl 1") },
> 	{ MODKEY,                 XF86XK_MonBrightnessDown,   spawn, SHCMD("brctl 0") },
> 	{ MODKEY,                 XK_F7,                      spawn, SHCMD("brctl 0") },
> 	{ 0,                      XF86XK_AudioMute,           spawn, SHCMD("amixer set Master mute") },
> 	{ MODKEY,                 XF86XK_AudioMute,           spawn, SHCMD("amixer set Master unmute") },
> 	{ 0,                      XF86XK_AudioLowerVolume,    spawn, SHCMD("amixer set Master 5%-") },
> 	{ 0,                      XF86XK_AudioRaiseVolume,    spawn, SHCMD("amixer set Master 5%+") },
> 	
> 	/*{ MODKEY,                       XK_b,      togglebar,      {0} },*/
> 	{ MODKEY,                       XK_Tab,      focusstack,     {.i = +1 } },
> 	{ MODKEY|ShiftMask,             XK_Tab,      focusstack,     {.i = -1 } },
> 	/*{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },*/
> 	/*{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },*/
88,95c106,114
< 	{ MODKEY,                       XK_Tab,    view,           {0} },
< 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
< 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
< 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
< 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
< 	{ MODKEY,                       XK_space,  setlayout,      {0} },
< 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
< 	{ MODKEY|ShiftMask,             XK_f,      togglefullscr,  {0} },
---
>         /* { MODKEY,                       XK_Tab,    view,           {0} },*/
> 	{ MODKEY,                       XK_BackSpace,      killclient,     {0} },
> 	{ MODKEY|ShiftMask|ControlMask, XK_BackSpace,      quit,           {0} },
> 	/*{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },*/
> 	/*{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },*/
> 	/*{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },*/
> 	/*{ MODKEY,                       XK_space,  setlayout,      {0} },*/
> 	/*{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },*/
> 	{ MODKEY,                       XK_f,      togglefullscr,  {0} },
111c130
< 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
---
> 	/*{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },*/
116a136
> /* note all are set to use MODKEY because the bar will only show up when the mod key is held */
119,129c139,149
< 	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
< 	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
< 	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
< 	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
< 	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
< 	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
< 	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
< 	{ ClkTagBar,            0,              Button1,        view,           {0} },
< 	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
< 	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
< 	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
---
> 	{ ClkLtSymbol,          MODKEY,              Button1,        setlayout,      {0} },
> 	{ ClkLtSymbol,          MODKEY,              Button3,        setlayout,      {.v = &layouts[2]} },
> 	{ ClkWinTitle,          MODKEY,              Button2,        zoom,           {0} },
> 	{ ClkStatusText,        MODKEY,              Button2,        spawn,          {.v = termcmd } },
> 	{ ClkClientWin,         MODKEY|ShiftMask,         Button1,        movemouse,      {0} },
> 	{ ClkClientWin,         MODKEY|ShiftMask,         Button2,        togglefloating, {0} },
> 	{ ClkClientWin,         MODKEY|ShiftMask,         Button3,        resizemouse,    {0} },
> 	{ ClkTagBar,            MODKEY,              Button1,        view,           {0} },
> 	{ ClkTagBar,            MODKEY,              Button3,        toggleview,     {0} },
> 	{ ClkTagBar,            MODKEY|ShiftMask,         Button1,        tag,            {0} },
> 	{ ClkTagBar,            MODKEY|ShiftMask,         Button3,        toggletag,      {0} },
diff /gnu/store/8ibr3xwn9dl63n48zkp777jhmzmzrn2w-dwm-6.4-checkout/dwm.c /home/tadhg/src/dwm/dwm.c
509c509,515
< 		do
---
> 		unsigned int occ = 0;
> 		for(c = m->clients; c; c=c->next)
> 			occ |= c->tags == TAGMASK ? 0 : c->tags;
> 		do {
> 			/* Do not reserve space for vacant tags */
> 			if (!(occ & 1 << i || m->tagset[m->seltags] & 1 << i))
> 				continue;
511c517
< 		while (ev->x >= x && ++i < LENGTH(tags));
---
> 		} while (ev->x >= x && ++i < LENGTH(tags));
803c809
< 		occ |= c->tags;
---
> 		occ |= c->tags == TAGMASK ? 0 : c->tags;
808a815,817
> 		/* Do not draw vacant tags */
> 		if(!(occ & 1 << i || m->tagset[m->seltags] & 1 << i))
> 			continue;
812,815d820
< 		if (occ & 1 << i)
< 			drw_rect(drw, x + boxs, boxs, boxw, boxw,
< 				m == selmon && selmon->sel && selmon->sel->tags & 1 << i,
< 				urg & 1 << i);
1089a1095,1102
> int are_any_clients_running(){
>   for(Monitor* m = mons; m; m = m->next){
>     if(m->clients){
>       return 1;
>     }
>   }
>   return 0;
> }
1093,1094c1106,1111
< 	if (!selmon->sel)
< 		return;
---
>   if (!selmon->sel){
>     if(!are_any_clients_running()){
>       quit(arg);
>     }
>     return;
>   }
1696a1714,1717
> 	if (urg){
> 	  Arg a = {0}; //dummy so we have an argument
> 	  holdbar(&a);
> 	}
2166c2187
< 
---
> 	int has_urgent = 0;
2171c2192
< 		} else
---
> 		} else {
2172a2194,2195
> 			has_urgent = has_urgent | c->isurgent;
> 		}
2177a2201,2204
> 	}
> 	if(has_urgent){
> 	  Arg a = {0};
> 	  holdbar(&a);
Only in /home/tadhg/src/dwm: .git
Only in /home/tadhg/src/dwm: patches
